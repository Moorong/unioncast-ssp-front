package com.unioncast.ssp.front.controller.ssp;

import java.util.Date;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.unioncast.common.page.PageCriteria;
import com.unioncast.common.restClient.RestResponse;
import com.unioncast.common.ssp.model.SspWithdrawRequestInfo;
import com.unioncast.common.user.model.User;
import com.unioncast.common.util.CommonUtil;
import com.unioncast.ssp.front.common.util.Common;
import com.unioncast.ssp.front.common.util.SpringUtils;
import com.unioncast.ssp.front.controller.common.BaseController;
import com.unioncast.ssp.front.service.ssp.SspWithdrawRequestInfoService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api("提现信息")
@Controller
@RequestMapping("/rest/ssp/withdrawRequestInfo")
public class SspWithdrawRequestInfoController extends BaseController {
		
	@Resource
	private SspWithdrawRequestInfoService sspWithdrawRequestInfoService;
	
	private static final Logger LOG = LogManager.getLogger(SspWithdrawRequestInfoController.class);
	/**
	 * 查询
	 * @author changguobin@unioncast.cn
	 * @date 2017-04-01 13:59:57
	 *
	 * @return RestResponse
	 */
	@ApiOperation(value = "查询", httpMethod = "POST")
	@RequestMapping(value = "find",method=RequestMethod.POST)
	@ResponseBody
	public RestResponse find(SspWithdrawRequestInfo sspWithdrawRequestInfo){
		
		User user = getCurrentLoginUserInfo();
		
		if(CommonUtil.isNotNull(user,sspWithdrawRequestInfo))
			sspWithdrawRequestInfo.setUser(user);
		
		RestResponse restResponse = new RestResponse();
		restResponse.setStatus(RestResponse.FAIL);
		try {
			return sspWithdrawRequestInfoService.find(sspWithdrawRequestInfo);
		} catch (Exception e) {
			LOG.error("查询提现数据失败!",e);
		}
		return restResponse;
	}
	/**
	 * 提现列表分页
	 * @author changguobin@unioncast.cn
	 * @date 2017-04-01 13:59:57
	 *
	 * @return RestResponse
	 */
	@ApiOperation(value = "提现列表分页", httpMethod = "POST")
	@RequestMapping(value = "page",method=RequestMethod.POST)
	public @ResponseBody RestResponse withdrawalPage(@RequestBody PageCriteria pageCriteria){
		
		User user = getCurrentLoginUserInfo();
		
		if(CommonUtil.isNotNull(user,pageCriteria))
			pageCriteria.setCurrUserId(user.getId());
		
		RestResponse restResponse = new RestResponse();
		restResponse.setStatus(RestResponse.FAIL);
		try {
			return sspWithdrawRequestInfoService.page(pageCriteria);
		} catch (Exception e) {
			LOG.error("请求提现列表分页数据失败!",e);
		}
		return restResponse;
	}
	/**
	 * 新增提现
	 * @author changguobin@unioncast.cn
	 * @date 2017-04-01 13:59:57
	 *
	 * @return RestResponse
	 */
	@ApiOperation(value = "新增提现", httpMethod = "POST")
	@RequestMapping(value = "add",method=RequestMethod.POST)
	@ResponseBody
	public RestResponse add(SspWithdrawRequestInfo sspWithdrawRequestInfo){
		
		User user = getCurrentLoginUserInfo();
		
		if(CommonUtil.isNotNull(user,sspWithdrawRequestInfo))
			sspWithdrawRequestInfo.setUser(user);
		
		RestResponse restResponse = new RestResponse();
		restResponse.setStatus(RestResponse.FAIL);
		try {
			return sspWithdrawRequestInfoService.add(sspWithdrawRequestInfo);
		} catch (Exception e) {
			LOG.error("请求提现列表分页数据失败!",e);
		}
		return restResponse;
	}
	/**
	 * 更新提现状态(提现状态	1-提现中，2-提现成功，3-提现失败)
	 * @author changguobin@unioncast.cn
	 * @date 2017-04-01 13:59:57
	 *
	 * @return RestResponse
	 */
	@ApiOperation(value = "更新提现状态", httpMethod = "POST")
	@RequestMapping(value = "updateState",method=RequestMethod.POST)
	@ResponseBody
	public RestResponse updateState(Long id,Long status){
		
		RestResponse restResponse = new RestResponse();
		restResponse.setStatus(RestResponse.FAIL);
		
		try {
			if(CommonUtil.isNotNull(id,status)){
				SspWithdrawRequestInfo sspWithdrawRequestInfo = new SspWithdrawRequestInfo();
				sspWithdrawRequestInfo.setId(id);
				sspWithdrawRequestInfo.setState(status);
				sspWithdrawRequestInfo.setUpdateTime(new Date());
				return sspWithdrawRequestInfoService.update(sspWithdrawRequestInfo);
			}
		} catch (Exception e) {
			LOG.error("请求提现列表分页数据失败!",e);
		}
		return restResponse;
	}
	
	
}
