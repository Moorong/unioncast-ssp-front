package com.unioncast.ssp.front.controller.ssp;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.unioncast.common.page.PageCriteria;
import com.unioncast.common.restClient.RestResponse;
import com.unioncast.common.restClient.RestResponseFactory;
import com.unioncast.common.ssp.model.SspFinanceInfo;
import com.unioncast.common.ssp.model.SspWithdrawRequestInfo;
import com.unioncast.common.user.model.User;
import com.unioncast.common.util.CommonUtil;
import com.unioncast.ssp.front.controller.common.BaseController;
import com.unioncast.ssp.front.service.ssp.FinanceService;
import com.unioncast.ssp.front.service.ssp.SspDictPlatformService;
import com.unioncast.ssp.front.service.ssp.SspWithdrawRequestInfoService;
import com.unioncast.ssp.front.service.user.UserSystemService;

@Api("财务信息")
@Controller
@RequestMapping("/rest/ssp/finance")
public class FinanceController extends BaseController {
	
	@Resource
	private FinanceService financeService;
	@Resource
	private UserSystemService userSystemService;
	
	private static final Logger LOG = LogManager.getLogger(FinanceController.class);
	/** 页面跳转 start**/
	/**
	 * 订单充值记录列表页
	 * @author changguobin@unioncast.cn
	 * @date 2017-03-31 11:42:38
	 *
	 * @return String
	 */
	@ApiOperation(value = "订单充值记录列表页", httpMethod = "GET")
	@RequestMapping(value = "orderRecharge",method=RequestMethod.GET)
	public String orderRecharge(){
		return "ssp/finance/orderRecharge";
	}
	@ApiOperation(value = "财务信息页跳转", httpMethod = "GET")
	@RequestMapping(value = "finaceInfo",method=RequestMethod.GET)
	public String finaceInfo(Model model){
		User user = getCurrentLoginUserInfo();
		SspFinanceInfo sfi =new SspFinanceInfo();
		sfi.setUser(user);
		RestResponse restResponse = financeService.find(sfi);
		if(restResponse.isSuccess()){
			List<SspFinanceInfo>  listSfi = restResponse.getResultArr(SspFinanceInfo.class);
			if(listSfi.size()>0)
				model.addAttribute("financeInfo",listSfi.get(0));
		}
		
		return "ssp/finance/finaceInfo";
	}
	@ApiOperation(value = "结算信息页跳转", httpMethod = "GET")
	@RequestMapping(value = "settlementInfo",method=RequestMethod.GET)
	public String settlementInfo(Model model){
		User user = getCurrentLoginUserInfo();
		Double balance = 0.0;
		try {
			User[] userArr = userSystemService.findById(user.getId());
			balance = userArr[0].getBalance();
		} catch (Exception e) {
			LOG.error("获取余额失败!",e);
		}
		model.addAttribute("balance",balance);
		SspFinanceInfo sfi =new SspFinanceInfo();
		sfi.setUser(user);
		RestResponse restResponse = financeService.find(sfi);
		if(restResponse.isSuccess()){
			List<SspFinanceInfo>  listSfi = restResponse.getResultArr(SspFinanceInfo.class);
			if(listSfi.size()>0)
				model.addAttribute("financeInfo",listSfi.get(0));
		}
		return "ssp/finance/settlementInfo";
	}
	@ApiOperation(value = "编辑财务信息页跳转", httpMethod = "GET")
	@RequestMapping(value = "editFinaceInfo",method=RequestMethod.GET)
	public String editFinaceInfo(Model model,Long id){
		User user = getCurrentLoginUserInfo();
		SspFinanceInfo sfi =new SspFinanceInfo();
		sfi.setId(id);
		sfi.setUser(user);
		RestResponse restResponse = financeService.find(sfi);
		if(restResponse.isSuccess()){
			List<SspFinanceInfo>  listSfi = restResponse.getResultArr(SspFinanceInfo.class);
			if(listSfi.size()>0)
				model.addAttribute("financeInfo",listSfi.get(0));
		}
		return "ssp/finance/editFinaceInfo";
	}
	
	/** 页面跳转 end**/
	
	/**数据请求 start**/
	@ApiOperation(value = "跟新财务信息", httpMethod = "POST")
	@RequestMapping(value = "saveFinaceInfo",method=RequestMethod.POST)
	public @ResponseBody RestResponse editFinaceInfo(SspFinanceInfo sspFinanceInfo){
		if(CommonUtil.isNull(sspFinanceInfo))
			return RestResponseFactory.exception();
		User user = getCurrentLoginUserInfo();
		sspFinanceInfo.setState(1);
		sspFinanceInfo.setUser(user);
		sspFinanceInfo.setUpdateTime(new Date());
		RestResponse restResponse = null;
		if(CommonUtil.isNull(sspFinanceInfo.getId())){
			sspFinanceInfo.setDeleteState(1);
			sspFinanceInfo.setCreateTime(new Date());
			restResponse = financeService.add(sspFinanceInfo);
		}else{
			restResponse = financeService.update(sspFinanceInfo);
		}
		return restResponse;
	}
	/**数据请求 end**/
	
}
